---
import { Image } from "astro:assets";
---

<section class="form">
    <h1>Olá! Faça login</h1>
    <form id="first_form">
        <p class="bad_warning" id="first_form_warnings"></p>

        <input type="text" id="email" name="email" placeholder="Email" />
        <input type="password" id="password" name="password" placeholder="Senha" />

        <button type="submit">Login</button>
    </form>
</section>

<section class="auth_alternatives">
    <p>Ou entre com</p>
    <div class="alternatives">
        <button class="alternative" name="facebook">
            <Image
                src="/assets/facebook.svg"
                width={30}
                height={30}
                alt="Logo da rede social Facebook, clique para fazer login com sua conta do Facebook."
            />
        </button>

        <button class="alternative" name="google">
            <Image
                src="/assets/google.svg"
                width={30}
                height={30}
                alt="Logo da Google, clique para fazer login com sua conta Google."
            />
        </button>

        <button class="alternative" name="linkedin">
            <Image
                src="/assets/linkedin.svg"
                width={30}
                height={30}
                alt="Logo da rede social Linkedin, clique para fazer login com sua conta do Linkedin."
            />
        </button>
    </div>

    <p class="login_bottom_text">Não tem uma conta? <a href="/access/signup">Registre-se</a></p>
</section>

<script>
    const form = document.querySelector<HTMLFormElement>("#first_form")
    const warningsParagraph = document.querySelector<HTMLParagraphElement>("#first_form_warnings")

    const params = new URL(window.location.href).searchParams

    form.addEventListener("submit", (e) => {
        e.preventDefault()

        const formdata = new FormData(form)
        
        const email = formdata.get("email")?.toString()
        const password = formdata.get("password")?.toString()

        if(!email) {
            warningsParagraph.textContent = "Forneça um email."
            return;
        }

        if(!password) {
            warningsParagraph.textContent = "Forneça sua senha."
            return
        }

        fetch("/api/v1/auth/login", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email,
                password
            }),
            credentials: "include",
        }).then(async (request) => {
            const ok = request.ok
            if (ok) {
                console.log("Login feito!")
                window.location.href = "/"
            } else {
                warningsParagraph.textContent = "Usuário não encontrado."
            }
        })
    })

</script>

<script>
    const buttons = document.querySelectorAll<HTMLButtonElement>(".auth_alternatives button")

    for(const button of buttons) {
        button.addEventListener("click", async () => {
            try {
                const response = await fetch(`${import.meta.env.PUBLIC_FRONTEND_API_URL}/v1/oauth/${button.name}`, {
                    method: 'POST',
                    credentials: 'include'
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                } else {
                    let data = await response.json()

                    window.location.href = data.auth_url;
                }
            } catch (error) {
                console.error('There was a problem with the fetch operation: ', error);
            }
        })
    }
</script>