services:
  nginx:
    image: nginx:alpine
    network_mode: host
    volumes:
      - ./nginx.template.conf:/etc/nginx/conf.d/nginx.template
    env_file:
      - ./.env
    environment:
      - D=$
    command: ["/bin/sh" , "-c" , "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]

  rest-server:
    build:
      context: .
      dockerfile: ./rest-server/Dockerfile
    network_mode: host
    volumes:
      - ${CDN_VOLUME_PATH}:${CDN_STORAGE_PATH}
    depends_on:
      - postgres

  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    network_mode: host
    env_file:
      - ./.env

  cdn-server:
    build:
      context: .
      dockerfile: ./cdn-server/Dockerfile
    network_mode: host
    volumes:
      - ${CDN_VOLUME_PATH}:${CDN_STORAGE_PATH}

  websocket:
    build:
      context: .
      dockerfile: ./websocket/Dockerfile
    network_mode: host
    depends_on:
      - postgres

  postgres:
    image: postgis/postgis:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"

volumes:
  pgdata: